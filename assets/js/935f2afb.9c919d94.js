"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting Started","href":"/litechain/docs/intro","docId":"intro"},{"type":"category","label":"Chain Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Why Streams?","href":"/litechain/docs/chain-basics/why_streams","docId":"chain-basics/why_streams"},{"type":"link","label":"Working with Streams","href":"/litechain/docs/chain-basics/working_with_streams","docId":"chain-basics/working_with_streams"},{"type":"link","label":"Composing Chains","href":"/litechain/docs/chain-basics/composing_chains","docId":"chain-basics/composing_chains"},{"type":"link","label":"type_signatures","href":"/litechain/docs/chain-basics/type_signatures","docId":"chain-basics/type_signatures"}],"href":"/litechain/docs/chain-basics/"},{"type":"category","label":"Tutorial - Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Manage Docs Versions","href":"/litechain/docs/tutorial-extras/manage-docs-versions","docId":"tutorial-extras/manage-docs-versions"},{"type":"link","label":"Translate your site","href":"/litechain/docs/tutorial-extras/translate-your-site","docId":"tutorial-extras/translate-your-site"}],"href":"/litechain/docs/category/tutorial---extras"},{"type":"html","value":"<a class=\'menu__link\' style=\'margin-top: 2px\' href=\'/litechain/reference/litechain/index.html\'>API Reference \ud83d\udcd6</a>"}]},"docs":{"chain-basics/composing_chains":{"id":"chain-basics/composing_chains","title":"Composing Chains","description":"If you are familiar with Functional Programming, the Chain follows the Monad Laws, this ensures they are composable to build complex application following the Category Theory definitions. Our goal on building LiteChain was always to make it truly composable, and this is the best abstraction we know for the job, so we adopted it.","sidebar":"tutorialSidebar"},"chain-basics/index":{"id":"chain-basics/index","title":"Chain Basics","description":"The Chain is the main building block of LiteChain, you compose chains together to build your LLM application.","sidebar":"tutorialSidebar"},"chain-basics/type_signatures":{"id":"chain-basics/type_signatures","title":"type_signatures","description":"","sidebar":"tutorialSidebar"},"chain-basics/why_streams":{"id":"chain-basics/why_streams","title":"Why Streams?","description":"For a visualization on streaming vs blocking, take a look at vercel docs on AI streaming, they have a nice animation there","sidebar":"tutorialSidebar"},"chain-basics/working_with_streams":{"id":"chain-basics/working_with_streams","title":"Working with Streams","description":"By default, all LLMs generate a stream of tokens:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Getting Started","description":"LiteChain is a lighter alternative to LangChain for building LLMs application, instead of having a massive amount of features and classes, LiteChain focuses on having a single small core, that is easy to learn, easy to adapt, well documented, fully typed and truly composable.","sidebar":"tutorialSidebar"},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs.","sidebar":"tutorialSidebar"},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French.","sidebar":"tutorialSidebar"}}}')}}]);