"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4943],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||o;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3},i="GPT4All LLMs",l={unversionedId:"llms/gpt4all",id:"llms/gpt4all",title:"GPT4All LLMs",description:"LLMs require a lot of GPU to run properly make it hard for the common folk to set one up locally. Fortunately, the folks at GPT4All are doing an excellent job in really reducing those models with various techniques, and speeding them up to run on CPUs everywhere with no issues. LiteChain also provides a thin wrapper for them, and since it's local, no API keys are required.",source:"@site/docs/llms/gpt4all.md",sourceDirName:"llms",slug:"/llms/gpt4all",permalink:"/litechain/docs/llms/gpt4all",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/llms/gpt4all.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"OpenAI LLMs",permalink:"/litechain/docs/llms/open_ai"},next:{title:"Zero Temperature",permalink:"/litechain/docs/llms/zero_temperature"}},s={},p=[],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gpt4all-llms"},"GPT4All LLMs"),(0,a.kt)("p",null,"LLMs require a lot of GPU to run properly make it hard for the common folk to set one up locally. Fortunately, the folks at ",(0,a.kt)("a",{parentName:"p",href:"https://gpt4all.io/index.html"},"GPT4All")," are doing an excellent job in really reducing those models with various techniques, and speeding them up to run on CPUs everywhere with no issues. LiteChain also provides a thin wrapper for them, and since it's local, no API keys are required."),(0,a.kt)("h1",{id:"gpt4allchain"},"GPT4AllChain"),(0,a.kt)("p",null,"You can use a ",(0,a.kt)("a",{parentName:"p",href:"pathname:///reference/litechain/contrib/index.html#litechain.contrib.GPT4AllChain"},(0,a.kt)("inlineCode",{parentName:"a"},"GPT4AllChain"))," like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from litechain import join_final_output\nfrom litechain.contrib import GPT4AllChain\n\ngreet_chain = GPT4AllChain[str, str](\n    "GreetingChain",\n    lambda name: f"### User: Hello little person that lives in my CPU, my name is {name}. How is it going?\\\\n\\\\n### Response:",\n    model="orca-mini-3b.ggmlv3.q4_0.bin",\n    temperature=0,\n)\n\nawait join_final_output(greet_chain("Alice"))\n#=> " I\'m doing well, thank you for asking! How about you?"\n')),(0,a.kt)("p",null,"The first time you run it, it will download the model you are using (in this case ",(0,a.kt)("inlineCode",{parentName:"p"},"orca-mini-3b.ggmlv3.q4_0.bin"),"), you can also specify a pathname there if you wish, you can check out all GPT4All available models ",(0,a.kt)("a",{parentName:"p",href:"https://gpt4all.io/index.html"},"on their website")," on Model Explorer."),(0,a.kt)("p",null,"Then, you might have noticed the prompt is just a string, but we do have roles markers inside it, with ",(0,a.kt)("inlineCode",{parentName:"p"},"### User:")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"### Response:"),", with two ",(0,a.kt)("inlineCode",{parentName:"p"},"\\n\\n")," line breaks in between. This is how GPT4All models were trained, and you can use this same patterns to keep the roles behaviour."),(0,a.kt)("p",null,"Also, in the example we used ",(0,a.kt)("inlineCode",{parentName:"p"},"temperature=0"),", for stability as explained ",(0,a.kt)("a",{parentName:"p",href:"/docs/llms/zero_temperature"},"here"),", but ",(0,a.kt)("a",{parentName:"p",href:"pathname:///reference/litechain/contrib/index.html#litechain.contrib.GPT4AllChain"},(0,a.kt)("inlineCode",{parentName:"a"},"GPT4AllChain"))," has many more parameters you can adjust that can work better depending on the model you are choosing, check them out on ",(0,a.kt)("a",{parentName:"p",href:"pathname:///reference/litechain/contrib/index.html#litechain.contrib.GPT4AllChain"},"the reference"),"."))}m.isMDXComponent=!0}}]);